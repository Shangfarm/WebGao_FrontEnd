const orderId = new URLSearchParams(window.location.search).get("orderId");
const resultCode = new URLSearchParams(window.location.search).get("resultCode");
const token = localStorage.getItem("token");

if (!orderId || !token) {
  alert("Thi·∫øu m√£ ƒë∆°n h√†ng ho·∫∑c b·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
  window.location.href = "/pages/TrangChu/home.html";
}

// üëâ H√†m th√¥ng b√°o
function showToast(message, type = "info") {
  let bg = "#198754";
  if (type === "error") bg = "#dc3545";
  if (type === "warning") bg = "#ffc107";
  if (type === "success") bg = "#28a745";
  Toastify({
    text: message,
    duration: 2500,
    close: true,
    gravity: "top",
    position: "right",
    style: { background: bg, color: "#fff" }
  }).showToast();
}

// üëâ H√†m c·∫≠p nh·∫≠t ƒë∆°n h√†ng n·∫øu MoMo thanh to√°n th√†nh c√¥ng
async function updateOrderAfterMomo() {
  if (resultCode === "0" && orderId) {
    const tempOrder = JSON.parse(localStorage.getItem("momo_temp_order"));

    if (tempOrder) {
      try {
        await fetch(`http://localhost:3001/api/orders/momo/${orderId}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`
          },
          body: JSON.stringify(tempOrder)
        });

        // ‚úÖ Xo√° t·∫•t c·∫£ d·ªØ li·ªáu t·∫°m v√† gi·ªè h√†ng
        localStorage.removeItem("momo_temp_order");
        localStorage.removeItem("cart");
        localStorage.removeItem(`cart_${localStorage.getItem("userId")}`);
        localStorage.removeItem("selectedPromotionId");
        localStorage.removeItem("selectedPromotionName");
         // ‚úÖ C·∫≠p nh·∫≠t bi·ªÉu t∆∞·ª£ng gi·ªè h√†ng
        const cartCountEl = document.getElementById("cart-count");
        if (cartCountEl) {
          cartCountEl.textContent = "0";
          cartCountEl.style.display = "none";
        }
          showToast("üéâ ƒê√£ c·∫≠p nh·∫≠t ƒë∆°n h√†ng MoMo v√† xo√° gi·ªè h√†ng!", "success");
      } catch (error) {
        console.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t ƒë∆°n h√†ng MoMo:", error);
        showToast("‚ö†Ô∏è Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t ƒë∆°n h√†ng sau thanh to√°n", "error");
      }
    } else {
      showToast("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu ƒë∆°n h√†ng t·∫°m t·ª´ MoMo", "warning");
    }
  }
   // ‚úÖ Hi·ªÉn th·ªã th√¥ng b√°o thanh to√°n MoMo theo resultCode
    if (resultCode !== null) {
      if (resultCode === "0") {
        showToast("üéâ Thanh to√°n MoMo th√†nh c√¥ng!", "success");
      } else {
        showToast("‚ùå Thanh to√°n MoMo th·∫•t b·∫°i ho·∫∑c b·ªã h·ªßy", "error");

        // ‚úÖ Quay l·∫°i trang ƒë·∫∑t h√†ng sau 2 gi√¢y
        setTimeout(() => {
          window.location.href = "/pages/DatHang/DatHang.html";
        }, 2000);
      }
    }
}

// üëâ H√†m l·∫•y chi ti·∫øt ƒë∆°n h√†ng
async function fetchOrderDetails() {
  try {
    const res = await fetch(`http://localhost:3001/api/orders/${orderId}`, {
      headers: { Authorization: `Bearer ${token}` },
    });

    if (!res.ok) throw new Error("Kh√¥ng th·ªÉ l·∫•y th√¥ng tin ƒë∆°n h√†ng");

    const { data: order } = await res.json();
    console.log("Chi ti·∫øt ƒë∆°n h√†ng:", order);

    document.getElementById("userName").textContent = order.userName;
    document.getElementById("phoneNumber").textContent = order.shippingAddress.phoneNumber;
    document.getElementById("address").textContent = `${order.shippingAddress.houseNumber}, ${order.shippingAddress.ward}, ${order.shippingAddress.district}, ${order.shippingAddress.city}`;

    document.getElementById("orderId").textContent = order._id;
    document.getElementById("createdAt").textContent = new Date(order.createdAt).toLocaleString();
    document.getElementById("paymentMethod").textContent = order.paymentMethod;
    document.getElementById("shippingMethod").textContent = `${order.shippingMethodId.name} (${order.shippingMethodId.price.toLocaleString()} ƒë)`;
    document.getElementById("promotionInfo").textContent = order.promotionId ? `${order.promotionId.name} - ${order.promotionId.discountType === "percentage" ? order.promotionId.discountValue + "%" : order.promotionId.discountValue.toLocaleString() + " ƒë"}` : "Kh√¥ng √°p d·ª•ng";
    document.getElementById("couponInfo").textContent = order.couponId ? order.couponId.code : "Kh√¥ng √°p d·ª•ng";

    const tbody = document.getElementById("items-body");
    let productSubtotal = 0;
    order.items.forEach(item => {
      const itemTotal = item.price * item.quantity;
      productSubtotal += itemTotal;

      const row = document.createElement("tr");
      row.innerHTML = `
        <td>${item.productId?.name || "Kh√¥ng r√µ"}</td>
        <td>${item.quantity}</td>
        <td>${item.price.toLocaleString()} ƒë</td>
        <td>${itemTotal.toLocaleString()} ƒë</td>
      `;
      tbody.appendChild(row);
    });

    const shippingFee = order.shippingMethodId.price || 0;
    const subtotal = order.items.reduce((sum, item) => sum + item.price * item.quantity, 0);

    let promotionDiscount = 0;
    let promotionText = "Kh√¥ng √°p d·ª•ng";

    const promo = order.promotionId;
    if (
      promo &&
      typeof promo.name === "string" &&
      promo.name.trim() !== "" &&
      promo.discountType &&
      typeof promo.discountValue === "number"
    ) {
      if (promo.discountType === "percentage") {
        promotionDiscount = Math.round(order.totalCost * promo.discountValue / 100);
        promotionText = `${promo.name} - ${promo.discountValue}%`;
      } else if (promo.discountType === "fixed") {
        promotionDiscount = promo.discountValue;
        promotionText = `${promo.name} - ${promo.discountValue.toLocaleString()} ƒë`;
      }
    }

    document.getElementById("subtotal").textContent = subtotal.toLocaleString() + " ƒë";
    document.getElementById("promotionInfo").textContent = promotionText;
    document.getElementById("discount").textContent = `- ${promotionDiscount.toLocaleString()} ƒë`;
    document.getElementById("shippingFee").textContent = shippingFee.toLocaleString() + " ƒë";
    document.getElementById("totalAmount").textContent = order.totalAmount.toLocaleString() + " ƒë";

    document.getElementById("orderStatus").textContent = order.orderStatus;
    document.getElementById("shippingStatus").textContent = order.shippingStatus || "PROCESSING";

  } catch (err) {
    console.error("L·ªói khi l·∫•y chi ti·∫øt ƒë∆°n h√†ng:", err);
    alert("Kh√¥ng th·ªÉ hi·ªÉn th·ªã chi ti·∫øt ƒë∆°n h√†ng");
  }
}

document.addEventListener("DOMContentLoaded", async () => {
  // ‚úÖ N·∫øu l√† thanh to√°n qua MoMo v√† th·∫•t b·∫°i ‚Üí quay l·∫°i trang ƒë·∫∑t h√†ng
  const partnerCode = new URLSearchParams(window.location.search).get("partnerCode");
  if (partnerCode === "MOMO" && resultCode !== "0") {
    // ‚ùå Kh√¥ng hi·ªÉn th·ªã h√≥a ƒë∆°n, chuy·ªÉn h∆∞·ªõng lu√¥n
    window.location.href = "/pages/DatHang/DatHang.html";
    return;
  }

  // ‚úÖ N·∫øu kh√¥ng ph·∫£i thanh to√°n MoMo ho·∫∑c ƒë√£ th√†nh c√¥ng
  await updateOrderAfterMomo(); // ch·ªâ c·∫≠p nh·∫≠t n·∫øu resultCode === "0"
  await fetchOrderDetails();    // lu√¥n hi·ªÉn th·ªã h√≥a ƒë∆°n
});

